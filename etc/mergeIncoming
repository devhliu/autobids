#!/bin/bash

if [ "$#" -lt 3 ]
then
echo "Usage: $0 <incoming bids dir> <incoming_log_dir> <BIDS_dir> [ optional: <endpoint UUID> <e-mail address> ] "
exit 1
fi


incoming_bids=$1
incoming_log_dir=$2
main_bids=$3

sendmail=0

if [ "$#" == 4 ]
then
 sendmail=1
 endpoint=$3
 email=$4
fi


if [ "$sendmail" = 1 ]
then
 mail_txt=$incoming_log_dir/mail.txt
 $AUTOBIDS_DIR/etc/genMailOutput $incoming_bids $endpoint >  $mail_txt
 $AUTOBIDS_DIR/etc/queueNetworkJob $AUTOBIDS_DIR/etc/sendMail $email ${main_bids##*/} $mail_txt
fi

cp -v $incoming_bids/code/*/bids-validator.txt $incoming_log_dir
cp -v $incoming_bids/code/*/subjects-list.txt $incoming_log_dir

#now use rsync to merge -- merge everything but code dir into main bids, and move contents of code dir into the incoming log dir
rsync -av --exclude code --remove-source-files --ignore-existing $incoming_bids/ $main_bids/bids/
rsync -av  --remove-source-files --ignore-existing $incoming_bids/code/* $incoming_log_dir/

#need a function to re-generate participants.tsv file (need to ensure this is atomic)
#if exists in incoming, then main participants.tsv already existed:
if [ -e $incoming_bids/participants.tsv ]
then
	$AUTOBIDS_DIR/etc/mergeParticipantsTSV $incoming_bids/participants.tsv $main_bids/bids/participants.tsv
fi


#remove remaining bids files we don't need to keep:
rm -f $incoming_bids/{.bidsignore,CHANGES,dataset_description.json,participants.tsv,README} $incoming_bids/sourcedata/README

#remove any empty folders from the incoming folder
find $incoming_bids -type d -delete

#any remaining files may be conflicts that we want to retain
if [ -e $incoming_bids ]
then
	pushd $incoming_bids
	tar -cvzf $incoming_log_dir/unimported_files.tgz .
	popd
fi

#now, incoming bids folder should be ok to remove.. (leave it in scratch)
