#!/bin/bash

#pipeline for running gradient correction & sa2rage+mp2rage B1 correction

bids_dir=$1  		#path to bids dir

if [ "$#" -lt 1 ]
then
  echo "Usage: $0 <bids>"
  exit 0
fi
shift 1 
opts=$@
#by default, only run on the most recently submitted subjects
subjlist=`ls -1t $bids_dir/code/*/subjects-list.txt | head -n 1`
if [ -e $subjlist ]
then
	nsubj=`cat $subjlist | wc -l`
	if [ "$nsubj" = "1" ]
	then
		subjid=`cat $subjlist`
		opts="$opts -s $subjid"
	else
		opts="$opts -S $subjlist"
	fi
fi


gradcorrect_app=gradcorrect_v0.0.2
mp2rage_correction_app=mp2rage_correction_v0.0.3
qsm_app=qsm_sstv_v0.1.1
beast_app=beast_v0.0.2
prepdwi_app=prepdwi_v0.0.11_7T

job1=$(bidsBatch $opts $gradcorrect_app $bids_dir $bids_dir/derivatives/$gradcorrect_app participant)



#these submit a job when gradcorrect is done, which then runs bidsBatch (needed since bidsBatch requires the input dataset to be complete when the job is run)

hasBIDS $bids_dir anat MP2RAGE && \
       	regularSubmit -N _$mp2rage_correction_app -j Quick -d afterany:$job1 bidsBatch $opts $mp2rage_correction_app  $bids_dir/derivatives/$gradcorrect_app $bids_dir/derivatives/$mp2rage_correction_app participant

hasBIDS $bids_dir anat GRE && \
	regularSubmit -N _$qsm_app -j Quick -d afterany:$job1 bidsBatch $opts $qsm_app  $bids_dir/derivatives/$gradcorrect_app $bids_dir/derivatives/$qsm_app participant

hasBIDS $bids_dir anat T1w && \
	regularSubmit -N _$beast_app -j Quick -d afterany:$job1 bidsBatch $opts $beast_app  $bids_dir/derivatives/$gradcorrect_app $bids_dir/derivatives/$beast_app participant


#leave prepdwi out for now, since unable to monitor completion of beast_app dependency
#regularSubmit -j Quick -d afterany:$job1 bidsBatch $opts $prepdwi_app  $bids_dir  $bids_dir/derivatives/$prepdwi_app participant --in_brainmask_dir $bids_dir/derivatives/$beast_app


echo $job1

exit 0
